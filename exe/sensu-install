#!/usr/bin/env ruby

require "optparse"

module Sensu
  class Install
    class << self
      def cli_options(arguments=ARGV)
        options = {
          :plugins => [],
          :verbose => false
        }
        optparse = OptionParser.new do |opts|
          opts.on("-h", "--help", "Display this message") do
            puts opts
            exit
          end
          opts.on("-v", "--verbose", "Enable verbose logging") do
            options[:verbose] = true
          end
          opts.on("-p", "--plugin PLUGIN", "Install a Sensu PLUGIN") do |plugin|
            options[:plugins] << plugin
          end
          opts.on("-P", "--plugins PLUGIN[,PLUGIN]", "PLUGIN or comma-delimited list of Sensu plugins to install") do |plugins|
            options[:plugins].concat(plugins.split(","))
          end
          opts.on("-s", "--source SOURCE", "Install Sensu plugins and/or extensions from a custom SOURCE") do |source|
            options[:source] = source
          end
        end
        optparse.parse!(arguments)
        options
      end

      def log(message)
        puts "[SENSU-INSTALL] #{message}"
      end

      def install_plugins(plugins, options={})
        log "installing Sensu plugins ..."
        log "provided Sensu plugins: #{plugins}" if options[:verbose]
        gems = plugins.map do |plugin|
          if plugin.start_with?("sensu-plugins-")
            plugin
          else
            "sensu-plugins-#{plugin}"
          end
        end
        log "Sensu plugin gems to be installed: #{gems}" if options[:verbose]
        gem_options = "--no-ri --no-rdoc"
        gem_options << " --verbose" if options[:verbose]
        gem_options << " --source #{options[:source]}" if options[:source]
        gems.each do |gem|
          log "installing Sensu plugin gem #{gem}"
          gem_command = "gem install #{gem} #{gem_options}"
          log gem_command if options[:verbose]
          unless system(gem_command)
            log "failed to install Sensu plugin gem #{gem}"
            log "you can run the sensu-install command again with --verbose for more info" unless options[:verbose]
            log "please take note of any failure messages above"
            log "make sure you have build tools installed (e.g. gcc)"
            log "trying to determine Sensu plugin homepage for #{gem} ..."
            clean_gem = gem.split(":").first
            system("gem specification #{clean_gem} -r | grep homepage")
            exit 2
          end
        end
      end

      def run
        options = cli_options
        unless options[:plugins].empty?
          install_plugins(options[:plugins], options)
        end
      end
    end
  end
end

Sensu::Install.run
